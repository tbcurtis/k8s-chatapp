apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  selector: 
    matchLabels:
      app: mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
      name: mongo
    spec:
      containers:
      - image: mongo:4.0.8
        name: mongodb
        env:
          - name: MONGO_INITDB_ROOT_USERNAME_FILE #Refer to this link for understanding why we use _FILE and volume mounts: https://hub.docker.com/_/mongo
            value: /etc/k8-training/admin/MONGO_ROOT_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD_FILE
            value: /etc/k8-training/admin/MONGO_ROOT_PASSWORD
        volumeMounts:
        - name: k8-training
          mountPath: /etc/k8-training
          readOnly: true
        ports:
          - containerPort: 27017  
        livenessProbe: #From here: https://devopscube.com/deploy-mongodb-kubernetes/
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe: #From here: https://devopscube.com/deploy-mongodb-kubernetes/
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
      #nodeSelector:
       # kubernetes.io/hostname: minikube
      volumes:
      - name: k8-training
        secret:
          secretName: k8-training
          items:
          - key: MONGO_ROOT_USERNAME
            path: admin/MONGO_ROOT_USERNAME
            mode: 0444
          - key: MONGO_ROOT_PASSWORD
            path: admin/MONGO_ROOT_PASSWORD
            mode: 0444
          